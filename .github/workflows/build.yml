name: Build

on:
  push:
    branches:
      - "main"

jobs:
  build:
    name: Build on ${{ matrix.platform }} with ${{ matrix.build_type }} configuration
    strategy:
      matrix:
        build_type:
          - "Debug"
          - "Release"
        platform:
          - "windows-latest"
          - "ubuntu-latest"
          - "macos-latest" # arm
          - "macos-13" # x86_64
        include:
          - platform: "windows-latest"
            vcpkg_triplet: "x64-windows-static"
          - platform: "ubuntu-latest"
            vcpkg_triplet: "x64-linux"
          - platform: "macos-latest"
            vcpkg_triplet: "arm64-osx"
          - platform: "macos-13"
            vcpkg_triplet: "x64-osx"

    runs-on: ${{ matrix.platform }}

    permissions:
      actions: write

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.platform }}-${{ matrix.build_type }}
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git -b 2025.02.14
          cd vcpkg && ./bootstrap-vcpkg.sh
          echo "VCPKG_ROOT=${{github.workspace}}/vcpkg" >> $GITHUB_ENV
          echo "${{github.workspace}}/vcpkg" >> $GITHUB_PATH
          ./vcpkg integrate install
        shell: bash

      - name: Install OpenMP
        if: matrix.platform == 'macos-latest' || matrix.platform == 'macos-13'
        run: |
          brew install libomp

      - name: CMake
        run: |
          cmake --preset=default -DVCPKG_TARGET_TRIPLET=${{matrix.vcpkg_triplet}}
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}
          cpack --config ${{github.workspace}}/build/CPackConfig.cmake -C ${{matrix.build_type}} -G ZIP

      - uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.platform == 'macos-latest' && 'macos-arm64' || (matrix.platform == 'macos-13' && 'macos-x86_64' || matrix.platform)}} ${{matrix.build_type}} binaries
          path: ${{github.workspace}}/*.zip

  build-wheel:
    strategy:
      matrix:
        platform:
          - "windows-latest"
          - "ubuntu-22.04"
          - "macos-latest" # arm
          - "macos-13" # x86_64

    runs-on: ${{ matrix.platform }}

    permissions:
      actions: write

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.platform }}-build-wheel
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git -b 2025.02.14
          cd vcpkg && ./bootstrap-vcpkg.sh
          echo "VCPKG_ROOT=${{github.workspace}}/vcpkg" >> $GITHUB_ENV
          echo "${{github.workspace}}/vcpkg" >> $GITHUB_PATH
          ./vcpkg integrate install
        shell: bash

      - name: Install dependencies
        run: python -m pip install -U pip "pybind11[global]" cmake build auditwheel

      - name: Build
        run: python -m build

      - name: Fix wheel for manylinux
        if: ${{ matrix.platform == 'ubuntu-22.04' }}
        run: |
          auditwheel repair dist/*.whl -w dist --plat manylinux_2_35_x86_64
          rm dist/*-linux_*.whl

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.platform}} wheel
          path: ${{github.workspace}}/dist/*.whl
